<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6LbGO/MR729JNmtqgnF1dAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="Column1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAjZJREFUOE+V
        k19IU1Ecx686l1Bqq0jBZrKma9koUTTnQz2ZgWCBZD0UpE0ferAew54GvkQUGGSGPugIwnBlusppJGnk
        elAmrQjrWmOawV7Mv83tfvv97vQ0CZUOfLjnnt/v8z3nwj3S6siQ4uPOSglxNqJuC2qp9xw5+qhKcnz5
        vlFNc6GS2FIELfNgA6jGPdxLzji5FEI7p7bmK7rOImxFdk+emLNDbpVER7LpHx5F5tP8Tal4a0HbZzus
        A9Fedsit5oA6c6cFh58f2ZDLo2Z8CPYhHA7DNelCoTsP7JBbowYUPDGjeCAX1le5OPPOiBJ68jtz/ZMR
        8qwbiqIgEong0ZcO6rOAHRFwojcbZUMmXPBYMeh/gQbfMZwaNqHxqwEzC/1Cfiy34eTQQZS+MYEdEVDu
        NqBy5BC8Mz61+eecjPbAcQTmBoXs/HYflR4jcUCFHRFQ9ToTl8b2497EFfwOLavSykpIyN3+JqpnqT1r
        sCMCaoYzUO+L0irbsBxaAg+WXVO3RC0WdkRA/fs03Jj4i8N/EfOLv/ByunHdeizsiICGsT24+X33Olr8
        Bf+sxcLOWkCt3bsLzT9S/wu7V8cB9CPRxSjuylGaAjo4gjvgnE2Ca16LvsVE9C9pVNw0dy1o1ZojuB13
        p3aixJnDv/J5vkz65Ir08dIeg3J1JA23fSlol5PQFdCgezoBzwied0xuw52Pybjm2YuyXoOScjrdR24W
        B/DQqxeDj8TftTnVqzuTLEl/ACKJ+ZLmlpsrAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnEx.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>